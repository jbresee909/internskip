{"ast":null,"code":"import _objectSpread from \"/Users/m/Desktop/my_app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/m/Desktop/my_app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/m/Desktop/my_app/client/src/components/Main.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Hero from \"./Hero\";\nimport SearchResults from \"./SearchResults\";\nimport axios from \"axios\";\n\nconst Main = () => {\n  const _useState = useState({\n    categories: {\n      data: []\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        categoryState = _useState2[0],\n        setCategoryState = _useState2[1];\n\n  const _useState3 = useState({\n    projects: {\n      data: []\n    }\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        projectState = _useState4[0],\n        setProjectState = _useState4[1]; // When a new category of projects is selected, this updates the projects list\n\n\n  const handleSetProjects = category => {\n    axios.get(\"http://localhost:5000/api/projects/\" + category).then(projects => {\n      const newState = _objectSpread({}, projectState);\n\n      newState.projects = projects;\n      setProjectState(newState);\n    }).catch(err => console.log(err));\n  }; // GET all the project categories\n\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/project-categories\").then(categories => {\n      const newState = _objectSpread({}, categoryState);\n\n      newState.categories = categories;\n      setCategoryState(newState);\n    }).catch(err => console.log(err));\n    axios.get(\"http://localhost:5000/api/projects\").then(projects => {\n      const newState = _objectSpread({}, projectState);\n\n      newState.projects = projects;\n      setProjectState(newState);\n    }).catch(err => console.log(err));\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"rgb(225, 228, 180)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Hero, {\n    categories: categoryState.categories,\n    handleSetProjects: handleSetProjects,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(SearchResults, {\n    projects: projectState.projects,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/m/Desktop/my_app/client/src/components/Main.js"],"names":["React","useState","useEffect","Hero","SearchResults","axios","Main","categories","data","categoryState","setCategoryState","projects","projectState","setProjectState","handleSetProjects","category","get","then","newState","catch","err","console","log","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACyBL,QAAQ,CAAC;AACjDM,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AADI;AADqC,GAAD,CADjC;AAAA;AAAA,QACVC,aADU;AAAA,QACKC,gBADL;;AAAA,qBAOuBT,QAAQ,CAAC;AAC/CU,IAAAA,QAAQ,EAAE;AACRH,MAAAA,IAAI,EAAE;AADE;AADqC,GAAD,CAP/B;AAAA;AAAA,QAOVI,YAPU;AAAA,QAOIC,eAPJ,kBAajB;;;AACA,QAAMC,iBAAiB,GAAGC,QAAQ,IAAI;AACpCV,IAAAA,KAAK,CACFW,GADH,CACO,wCAAwCD,QAD/C,EAEGE,IAFH,CAEQN,QAAQ,IAAI;AAChB,YAAMO,QAAQ,qBAAQN,YAAR,CAAd;;AACAM,MAAAA,QAAQ,CAACP,QAAT,GAAoBA,QAApB;AACAE,MAAAA,eAAe,CAACK,QAAD,CAAf;AACD,KANH,EAOGC,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQD,GATD,CAdiB,CAyBjB;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFW,GADH,CACO,8CADP,EAEGC,IAFH,CAEQV,UAAU,IAAI;AAClB,YAAMW,QAAQ,qBAAQT,aAAR,CAAd;;AACAS,MAAAA,QAAQ,CAACX,UAAT,GAAsBA,UAAtB;AACAG,MAAAA,gBAAgB,CAACQ,QAAD,CAAhB;AACD,KANH,EAOGC,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AASAf,IAAAA,KAAK,CACFW,GADH,CACO,oCADP,EAEGC,IAFH,CAEQN,QAAQ,IAAI;AAChB,YAAMO,QAAQ,qBAAQN,YAAR,CAAd;;AACAM,MAAAA,QAAQ,CAACP,QAAT,GAAoBA,QAApB;AACAE,MAAAA,eAAe,CAACK,QAAD,CAAf;AACD,KANH,EAOGC,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAE;AAAnB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,UAAU,EAAEd,aAAa,CAACF,UAD5B;AAEE,IAAA,iBAAiB,EAAEO,iBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEF,YAAY,CAACD,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CAxDD;;AA0DA,eAAeL,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Hero from \"./Hero\";\nimport SearchResults from \"./SearchResults\";\nimport axios from \"axios\";\n\nconst Main = () => {\n  const [categoryState, setCategoryState] = useState({\n    categories: {\n      data: []\n    }\n  });\n\n  const [projectState, setProjectState] = useState({\n    projects: {\n      data: []\n    }\n  });\n\n  // When a new category of projects is selected, this updates the projects list\n  const handleSetProjects = category => {\n    axios\n      .get(\"http://localhost:5000/api/projects/\" + category)\n      .then(projects => {\n        const newState = { ...projectState };\n        newState.projects = projects;\n        setProjectState(newState);\n      })\n      .catch(err => console.log(err));\n  };\n\n  // GET all the project categories\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/project-categories\")\n      .then(categories => {\n        const newState = { ...categoryState };\n        newState.categories = categories;\n        setCategoryState(newState);\n      })\n      .catch(err => console.log(err));\n\n    axios\n      .get(\"http://localhost:5000/api/projects\")\n      .then(projects => {\n        const newState = { ...projectState };\n        newState.projects = projects;\n        setProjectState(newState);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"rgb(225, 228, 180)\" }}>\n      <Hero\n        categories={categoryState.categories}\n        handleSetProjects={handleSetProjects}\n      />\n      <div className=\"divider\"></div>\n      <SearchResults projects={projectState.projects} />\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}