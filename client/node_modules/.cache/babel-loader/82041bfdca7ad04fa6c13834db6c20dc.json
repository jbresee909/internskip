{"ast":null,"code":"import _slicedToArray from \"/Users/m/Desktop/my_app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/m/Desktop/my_app/client/src/components/Register.js\";\nimport React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst Register = () => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const registerUser = e => {\n    e.preventDefault();\n\n    if (state.password === state.passwordConfirmation) {\n      axios.post(\"http://localhost:5000/api/users/add\", {\n        username: state.email,\n        password: state.password\n      }).then(() => console.log(\"user created with username: \" + state.email)).catch(err => console.log(err));\n    } else {\n      console.log(\"passwords need to match. Try Again.\");\n    }\n  };\n\n  return React.createElement(Card, {\n    className: \"w-50 mx-auto my-5 p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Form.Text, {\n    className: \"h3 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Create a New Account\"), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter Email\",\n    value: state.email,\n    onChange: e => setState({\n      email: e.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: state.password,\n    onChange: e => setState({\n      password: e.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPasswordConfirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Re-Enter Password\"), React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: state.passwordConfirmation,\n    onChange: e => {\n      setState({\n        passwordConfirmation: e.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: e => registerUser(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Register\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/m/Desktop/my_app/client/src/components/Register.js"],"names":["React","useState","Form","Card","Button","axios","Register","email","password","passwordConfirmation","state","setState","registerUser","e","preventDefault","post","username","then","console","log","catch","err","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst Register = () => {\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  });\n\n  const registerUser = e => {\n    e.preventDefault();\n\n    if (state.password === state.passwordConfirmation) {\n      axios\n        .post(\"http://localhost:5000/api/users/add\", {\n          username: state.email,\n          password: state.password\n        })\n        .then(() => console.log(\"user created with username: \" + state.email))\n        .catch(err => console.log(err));\n    } else {\n      console.log(\"passwords need to match. Try Again.\");\n    }\n  };\n\n  return (\n    <Card className=\"w-50 mx-auto my-5 p-3\">\n      <Form>\n        <Form.Text className=\"h3 mb-3\">Create a New Account</Form.Text>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={state.email}\n            onChange={e => setState({ email: e.target.value })}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={state.password}\n            onChange={e => setState({ password: e.target.value })}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPasswordConfirm\">\n          <Form.Label>Re-Enter Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={state.passwordConfirmation}\n            onChange={e => {\n              setState({ passwordConfirmation: e.target.value });\n            }}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" onClick={e => registerUser(e)}>\n          Register\n        </Button>\n      </Form>\n    </Card>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}