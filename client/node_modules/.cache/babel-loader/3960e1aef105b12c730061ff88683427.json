{"ast":null,"code":"import _objectSpread from \"/Users/m/Desktop/my_app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/m/Desktop/my_app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/m/Desktop/my_app/client/src/components/Register.js\";\nimport React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst Register = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        username = _useState6[0],\n        setUsername = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        password = _useState8[0],\n        setPassword = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        passwordConfirmation = _useState10[0],\n        setPasswordConfirmation = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        phone = _useState12[0],\n        setPhone = _useState12[1];\n\n  const registerUser = e => {\n    e.preventDefault();\n\n    if (state.password === state.passwordConfirmation) {\n      axios.post(\"http://localhost:5000/api/users/add\", {\n        first_name: firstName,\n        last_name: lastName,\n        username: username,\n        password: password,\n        phone: phone\n      }).then(() => console.log(\"user created with username: \" + state.email)).catch(err => console.log(err));\n    } else {\n      console.log(\"passwords need to match. Try Again.\");\n    }\n  };\n\n  const updateValues = (value, type) => {\n    if (type === \"email\") {\n      const newState = _objectSpread({}, state);\n\n      newState.email = value;\n      setState(newState);\n    } else if (type === \"password\") {\n      const newState = _objectSpread({}, state);\n\n      newState.password = value;\n      setState(newState);\n    } else {\n      const newState = _objectSpread({}, state);\n\n      newState.passwordConfirmation = value;\n      setState(newState);\n    }\n  };\n\n  return React.createElement(Card, {\n    className: \"w-50 mx-auto my-5 p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form.Text, {\n    className: \"h3 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Create a New Account\"), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter Email\",\n    value: state.email,\n    onChange: e => updateValues(e.target.value, \"email\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: state.password,\n    onChange: e => updateValues(e.target.value, \"password\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPasswordConfirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Re-Enter Password\"), React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: state.passwordConfirmation,\n    onChange: e => updateValues(e.target.value, \"passwordConfirmation\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: e => registerUser(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Register\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/m/Desktop/my_app/client/src/components/Register.js"],"names":["React","useState","Form","Card","Button","axios","Register","firstName","setFirstName","lastName","setLastName","username","setUsername","password","setPassword","passwordConfirmation","setPasswordConfirmation","phone","setPhone","registerUser","e","preventDefault","state","post","first_name","last_name","then","console","log","email","catch","err","updateValues","value","type","newState","setState","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst Register = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const registerUser = e => {\n    e.preventDefault();\n\n    if (state.password === state.passwordConfirmation) {\n      axios\n        .post(\"http://localhost:5000/api/users/add\", {\n          first_name: firstName,\n          last_name: lastName,\n          username: username,\n          password: password,\n          phone: phone\n        })\n        .then(() => console.log(\"user created with username: \" + state.email))\n        .catch(err => console.log(err));\n    } else {\n      console.log(\"passwords need to match. Try Again.\");\n    }\n  };\n\n  const updateValues = (value, type) => {\n    if (type === \"email\") {\n      const newState = { ...state };\n      newState.email = value;\n      setState(newState);\n    } else if (type === \"password\") {\n      const newState = { ...state };\n      newState.password = value;\n      setState(newState);\n    } else {\n      const newState = { ...state };\n      newState.passwordConfirmation = value;\n      setState(newState);\n    }\n  };\n\n  return (\n    <Card className=\"w-50 mx-auto my-5 p-3\">\n      <Form>\n        <Form.Text className=\"h3 mb-3\">Create a New Account</Form.Text>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={state.email}\n            onChange={e => updateValues(e.target.value, \"email\")}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={state.password}\n            onChange={e => updateValues(e.target.value, \"password\")}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPasswordConfirm\">\n          <Form.Label>Re-Enter Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={state.passwordConfirmation}\n            onChange={e => updateValues(e.target.value, \"passwordConfirmation\")}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" onClick={e => registerUser(e)}>\n          Register\n        </Button>\n      </Form>\n    </Card>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}